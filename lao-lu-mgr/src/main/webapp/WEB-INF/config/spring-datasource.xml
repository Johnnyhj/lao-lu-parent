<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    			http://www.springframework.org/schema/tx    
				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				http://www.springframework.org/schema/context
				http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 引入jdbc配置文件 -->  
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    
    <!-- 微代理jndi数据源 -->
	<!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
	<!--<property name="jndiName">-->
	<!--<value>${webApp.jndiDataSource}</value>-->
	<!--</property>-->
	<!--</bean>-->


    <bean id="dataSourceMaster"
          class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>${mgrApp.jndiDataSource}</value>
        </property>
        <property name="resourceRef">
            <value>true</value>
        </property>
        <property name="defaultObject" ref="dataSourceSlave">
        </property>
    </bean>


	<!-- 微代理dbcp数据源 -->
	<bean id="dataSourceSlave" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${mgrApp.db.driverClassName}" />
		<property name="url" value="${mgrApp.db.url}" />
		<property name="username" value="${mgrApp.db.username}" />
		<property name="password" value="${mgrApp.db.password}" />
		<property name="initialSize" value="${mgrApp.db.initialSize}"></property>
		<property name="maxActive" value="${mgrApp.db.maxActive}"></property>
		<property name="maxIdle" value="${mgrApp.db.maxIdle}"></property>
		<property name="minIdle" value="${mgrApp.db.minIdle}"></property>
		<property name="maxWait" value="${mgrApp.db.maxWait}"></property>
		<property name="removeAbandoned" value="true"></property>
		<property name="removeAbandonedTimeout" value="180"></property>
		<property name="validationQuery" value="select 1 from dual" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
	</bean>
  
   <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
    		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSourceMaster" />
    </bean>  
    <!-- 声明注解式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
  
    <!-- 分页 -->
    <bean id="paginationInterceptor" class="com.ai.ge.platform.page.PaginationInterceptor"></bean>
    
    
    <!-- 创建SqlSessionFactory，同时指定数据源 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSourceMaster" />
    	<!-- 
    	<property name="configLocation" value="classpath:com/ailk/ecs/marketportal/config/sqlMapConfig.xml"/>
    	 -->
    	<!--分页插件，拦截mybatis ID 为queryAll*的方法-->
		<property name="plugins"> <list><ref bean="paginationInterceptor"/></list></property>
    </bean>  
  
    <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.ai.ge.platform.mapper;" />
    </bean>  
      
</beans>