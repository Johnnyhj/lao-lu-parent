<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.ge.platform.mapper.product.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.ai.ge.platform.model.product.Product" >
    <id column="PROD_ID" property="prodId" jdbcType="BIGINT" />
    <result column="PROVID_ID" property="providId" jdbcType="BIGINT" />
    <result column="PROD_TYPE_CD" property="prodTypeCd" jdbcType="BIGINT" />
    <result column="PROD_NAME" property="prodName" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="SMALLINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ON_TIME" property="onTime" jdbcType="TIMESTAMP" />
    <result column="OFF_TIME" property="offTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="AliasBaseResultMap" type="com.ai.ge.platform.model.product.Product" extends="BaseResultMap" >
    <id column="p_PROD_ID" property="prodId" jdbcType="BIGINT" />
    <result column="p_PROVID_ID" property="providId" jdbcType="BIGINT" />
    <result column="p_DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="p_STATUS" property="status" jdbcType="SMALLINT" />
    <result column="p_CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="ProductDtoResultMap" type="com.ai.ge.platform.dto.product.ProductDto" extends="AliasBaseResultMap" >
    <collection property="prodSaleAttrConfigs" column="p_prod_id"
                select="com.ai.ge.platform.mapper.product.ProdSaleAttrConfigMapper.selectByProdId"
                resultMap="com.ai.ge.platform.mapper.product.ProdSaleAttrConfigMapper.AliasBaseResultMap"></collection>
  </resultMap>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PROD_ID, PROVID_ID, PROD_TYPE_CD, PROD_NAME, DESCRIPTION, STATUS, CREATE_TIME, ON_TIME, 
    OFF_TIME
  </sql>

    <sql id="Alias_Base_Column_List" >
    PROD_ID p_PROD_ID, PROVID_ID p_PROVID_ID, PROD_TYPE_CD, PROD_NAME, DESCRIPTION p_DESCRIPTION, STATUS p_STATUS, CREATE_TIME p_CREATE_TIME, ON_TIME,
    OFF_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.ge.platform.model.product.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from product
    where PROD_ID = #{prodId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from product
    where PROD_ID = #{prodId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.ge.platform.model.product.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.ge.platform.model.product.Product" >
    insert into product (PROD_ID, PROVID_ID, PROD_TYPE_CD, 
      PROD_NAME, DESCRIPTION, STATUS, 
      CREATE_TIME, ON_TIME, OFF_TIME
      )
    values (#{prodId,jdbcType=BIGINT}, #{providId,jdbcType=BIGINT}, #{prodTypeCd,jdbcType=BIGINT}, 
      #{prodName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{onTime,jdbcType=TIMESTAMP}, #{offTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.ge.platform.model.product.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="prodId != null" >
        PROD_ID,
      </if>
      <if test="providId != null" >
        PROVID_ID,
      </if>
      <if test="prodTypeCd != null" >
        PROD_TYPE_CD,
      </if>
      <if test="prodName != null" >
        PROD_NAME,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="onTime != null" >
        ON_TIME,
      </if>
      <if test="offTime != null" >
        OFF_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="prodId != null" >
        #{prodId,jdbcType=BIGINT},
      </if>
      <if test="providId != null" >
        #{providId,jdbcType=BIGINT},
      </if>
      <if test="prodTypeCd != null" >
        #{prodTypeCd,jdbcType=BIGINT},
      </if>
      <if test="prodName != null" >
        #{prodName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="onTime != null" >
        #{onTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offTime != null" >
        #{offTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.ge.platform.model.product.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.prodId != null" >
        PROD_ID = #{record.prodId,jdbcType=BIGINT},
      </if>
      <if test="record.providId != null" >
        PROVID_ID = #{record.providId,jdbcType=BIGINT},
      </if>
      <if test="record.prodTypeCd != null" >
        PROD_TYPE_CD = #{record.prodTypeCd,jdbcType=BIGINT},
      </if>
      <if test="record.prodName != null" >
        PROD_NAME = #{record.prodName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.onTime != null" >
        ON_TIME = #{record.onTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.offTime != null" >
        OFF_TIME = #{record.offTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set PROD_ID = #{record.prodId,jdbcType=BIGINT},
      PROVID_ID = #{record.providId,jdbcType=BIGINT},
      PROD_TYPE_CD = #{record.prodTypeCd,jdbcType=BIGINT},
      PROD_NAME = #{record.prodName,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=SMALLINT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      ON_TIME = #{record.onTime,jdbcType=TIMESTAMP},
      OFF_TIME = #{record.offTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.ge.platform.model.product.Product" >
    update product
    <set >
      <if test="providId != null" >
        PROVID_ID = #{providId,jdbcType=BIGINT},
      </if>
      <if test="prodTypeCd != null" >
        PROD_TYPE_CD = #{prodTypeCd,jdbcType=BIGINT},
      </if>
      <if test="prodName != null" >
        PROD_NAME = #{prodName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="onTime != null" >
        ON_TIME = #{onTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offTime != null" >
        OFF_TIME = #{offTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where PROD_ID = #{prodId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.ge.platform.model.product.Product" >
    update product
    set PROVID_ID = #{providId,jdbcType=BIGINT},
      PROD_TYPE_CD = #{prodTypeCd,jdbcType=BIGINT},
      PROD_NAME = #{prodName,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=SMALLINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      ON_TIME = #{onTime,jdbcType=TIMESTAMP},
      OFF_TIME = #{offTime,jdbcType=TIMESTAMP}
    where PROD_ID = #{prodId,jdbcType=BIGINT}
  </update>

    <select id="selectProductDetail" resultMap="ProductDtoResultMap" parameterType="long">
      SELECT <include refid="Alias_Base_Column_List"/> from product
      WHERE PROD_ID = #{prodId,jdbcType=BIGINT}
  </select>
</mapper>