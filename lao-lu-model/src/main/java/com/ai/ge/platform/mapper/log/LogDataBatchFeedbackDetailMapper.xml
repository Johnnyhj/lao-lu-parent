<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.ge.platform.mapper.log.LogDataBatchFeedbackDetailMapper">
    <resultMap id="BaseResultMap" type="com.ai.ge.platform.model.log.LogDataBatchFeedbackDetail">
        <id column="LOG_FEEDBACK_DETAIL_ID" property="logFeedbackDetailId" jdbcType="INTEGER"/>
        <result column="LOG_FEEDBACK_ID" property="logFeedbackId" jdbcType="INTEGER"/>
        <result column="SPLIT_BLOCK" property="splitBlock" jdbcType="INTEGER"/>
        <result column="DATA_NUM" property="dataNum" jdbcType="INTEGER"/>
        <result column="SPLIT_FILE_PATH" property="splitFilePath" jdbcType="VARCHAR"/>
        <result column="SPLIT_STATUS" property="splitStatus" jdbcType="INTEGER"/>
        <result column="PUSH_STATUS" property="pushStatus" jdbcType="INTEGER"/>
        <result column="PUSH_REPEAT" property="pushRepeat" jdbcType="INTEGER"/>
        <result column="PUSH_INTERFACE_FEEDBACK" property="pushInterfaceFeedback" jdbcType="VARCHAR"/>
        <result column="PUSH_TIME" property="pushTime" jdbcType="TIMESTAMP"/>
        <result column="PUSH_COMPLETE_TIME" property="pushCompleteTime" jdbcType="TIMESTAMP"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="INTERFACE_CALL_ID" property="interfaceCallId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        LOG_FEEDBACK_DETAIL_ID, LOG_FEEDBACK_ID, SPLIT_BLOCK, DATA_NUM, SPLIT_FILE_PATH,
        SPLIT_STATUS, PUSH_STATUS, PUSH_REPEAT, PUSH_INTERFACE_FEEDBACK, PUSH_TIME, PUSH_COMPLETE_TIME,
        CREATE_TIME, INTERFACE_CALL_ID
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.ai.ge.platform.model.log.LogDataBatchFeedbackDetailExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from log_data_batch_feedback_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from log_data_batch_feedback_detail
        where LOG_FEEDBACK_DETAIL_ID = #{logFeedbackDetailId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from log_data_batch_feedback_detail
        where LOG_FEEDBACK_DETAIL_ID = #{logFeedbackDetailId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteBylogFeedbackId" parameterType="java.lang.Integer">
        delete from log_data_batch_feedback_detail
        where LOG_FEEDBACK_ID = #{logFeedbackId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.ai.ge.platform.model.log.LogDataBatchFeedbackDetailExample">
        delete from log_data_batch_feedback_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ai.ge.platform.model.log.LogDataBatchFeedbackDetail">
        insert into log_data_batch_feedback_detail (LOG_FEEDBACK_DETAIL_ID, LOG_FEEDBACK_ID,
        SPLIT_BLOCK, DATA_NUM, SPLIT_FILE_PATH,
        SPLIT_STATUS, PUSH_STATUS, PUSH_REPEAT,
        PUSH_INTERFACE_FEEDBACK, PUSH_TIME, PUSH_COMPLETE_TIME,
        CREATE_TIME, INTERFACE_CALL_ID)
        values (#{logFeedbackDetailId,jdbcType=INTEGER}, #{logFeedbackId,jdbcType=INTEGER},
        #{splitBlock,jdbcType=INTEGER}, #{dataNum,jdbcType=INTEGER}, #{splitFilePath,jdbcType=VARCHAR},
        #{splitStatus,jdbcType=INTEGER}, #{pushStatus,jdbcType=INTEGER}, #{pushRepeat,jdbcType=INTEGER},
        #{pushInterfaceFeedback,jdbcType=VARCHAR}, #{pushTime,jdbcType=TIMESTAMP},
        #{pushCompleteTime,jdbcType=TIMESTAMP},
        #{createTime,jdbcType=TIMESTAMP}, #{interfaceCallId,jdbcType=INTEGER})
    </insert>

    <insert id="insertBatch" >
        insert into log_data_batch_feedback_detail (LOG_FEEDBACK_DETAIL_ID, LOG_FEEDBACK_ID,
        SPLIT_BLOCK, DATA_NUM, SPLIT_FILE_PATH,
        SPLIT_STATUS, PUSH_STATUS, PUSH_REPEAT,
        PUSH_INTERFACE_FEEDBACK, PUSH_TIME, PUSH_COMPLETE_TIME,
        CREATE_TIME, INTERFACE_CALL_ID)
        values
        <foreach collection="records" item="record" index="index" separator=",">
            (#{record.logFeedbackDetailId,jdbcType=INTEGER}, #{logFeedbackId,jdbcType=INTEGER},
            #{record.splitBlock,jdbcType=INTEGER}, #{record.dataNum,jdbcType=INTEGER}, #{record.splitFilePath,jdbcType=VARCHAR},
            #{record.splitStatus,jdbcType=INTEGER}, #{record.pushStatus,jdbcType=INTEGER}, #{record.pushRepeat,jdbcType=INTEGER},
            #{record.pushInterfaceFeedback,jdbcType=VARCHAR}, #{record.pushTime,jdbcType=TIMESTAMP},
            #{record.pushCompleteTime,jdbcType=TIMESTAMP},
            sysdate(), #{record.interfaceCallId,jdbcType=INTEGER})
        </foreach>
    </insert>



    <insert id="insertSelective" parameterType="com.ai.ge.platform.model.log.LogDataBatchFeedbackDetail">
        insert into log_data_batch_feedback_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logFeedbackDetailId != null">
                LOG_FEEDBACK_DETAIL_ID,
            </if>
            <if test="logFeedbackId != null">
                LOG_FEEDBACK_ID,
            </if>
            <if test="splitBlock != null">
                SPLIT_BLOCK,
            </if>
            <if test="dataNum != null">
                DATA_NUM,
            </if>
            <if test="splitFilePath != null">
                SPLIT_FILE_PATH,
            </if>
            <if test="splitStatus != null">
                SPLIT_STATUS,
            </if>
            <if test="pushStatus != null">
                PUSH_STATUS,
            </if>
            <if test="pushRepeat != null">
                PUSH_REPEAT,
            </if>
            <if test="pushInterfaceFeedback != null">
                PUSH_INTERFACE_FEEDBACK,
            </if>
            <if test="pushTime != null">
                PUSH_TIME,
            </if>
            <if test="pushCompleteTime != null">
                PUSH_COMPLETE_TIME,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="interfaceCallId != null">
                INTERFACE_CALL_ID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logFeedbackDetailId != null">
                #{logFeedbackDetailId,jdbcType=INTEGER},
            </if>
            <if test="logFeedbackId != null">
                #{logFeedbackId,jdbcType=INTEGER},
            </if>
            <if test="splitBlock != null">
                #{splitBlock,jdbcType=INTEGER},
            </if>
            <if test="dataNum != null">
                #{dataNum,jdbcType=INTEGER},
            </if>
            <if test="splitFilePath != null">
                #{splitFilePath,jdbcType=VARCHAR},
            </if>
            <if test="splitStatus != null">
                #{splitStatus,jdbcType=INTEGER},
            </if>
            <if test="pushStatus != null">
                #{pushStatus,jdbcType=INTEGER},
            </if>
            <if test="pushRepeat != null">
                #{pushRepeat,jdbcType=INTEGER},
            </if>
            <if test="pushInterfaceFeedback != null">
                #{pushInterfaceFeedback,jdbcType=VARCHAR},
            </if>
            <if test="pushTime != null">
                #{pushTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pushCompleteTime != null">
                #{pushCompleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="interfaceCallId != null">
                #{interfaceCallId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ai.ge.platform.model.log.LogDataBatchFeedbackDetailExample"
            resultType="java.lang.Integer">
        select count(*) from log_data_batch_feedback_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update log_data_batch_feedback_detail
        <set>
            <if test="record.logFeedbackDetailId != null">
                LOG_FEEDBACK_DETAIL_ID = #{record.logFeedbackDetailId,jdbcType=INTEGER},
            </if>
            <if test="record.logFeedbackId != null">
                LOG_FEEDBACK_ID = #{record.logFeedbackId,jdbcType=INTEGER},
            </if>
            <if test="record.splitBlock != null">
                SPLIT_BLOCK = #{record.splitBlock,jdbcType=INTEGER},
            </if>
            <if test="record.dataNum != null">
                DATA_NUM = #{record.dataNum,jdbcType=INTEGER},
            </if>
            <if test="record.splitFilePath != null">
                SPLIT_FILE_PATH = #{record.splitFilePath,jdbcType=VARCHAR},
            </if>
            <if test="record.splitStatus != null">
                SPLIT_STATUS = #{record.splitStatus,jdbcType=INTEGER},
            </if>
            <if test="record.pushStatus != null">
                PUSH_STATUS = #{record.pushStatus,jdbcType=INTEGER},
            </if>
            <if test="record.pushRepeat != null">
                PUSH_REPEAT = #{record.pushRepeat,jdbcType=INTEGER},
            </if>
            <if test="record.pushInterfaceFeedback != null">
                PUSH_INTERFACE_FEEDBACK = #{record.pushInterfaceFeedback,jdbcType=VARCHAR},
            </if>
            <if test="record.pushTime != null">
                PUSH_TIME = #{record.pushTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.pushCompleteTime != null">
                PUSH_COMPLETE_TIME = #{record.pushCompleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.interfaceCallId != null">
                INTERFACE_CALL_ID = #{record.interfaceCallId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update log_data_batch_feedback_detail
        set LOG_FEEDBACK_DETAIL_ID = #{record.logFeedbackDetailId,jdbcType=INTEGER},
        LOG_FEEDBACK_ID = #{record.logFeedbackId,jdbcType=INTEGER},
        SPLIT_BLOCK = #{record.splitBlock,jdbcType=INTEGER},
        DATA_NUM = #{record.dataNum,jdbcType=INTEGER},
        SPLIT_FILE_PATH = #{record.splitFilePath,jdbcType=VARCHAR},
        SPLIT_STATUS = #{record.splitStatus,jdbcType=INTEGER},
        PUSH_STATUS = #{record.pushStatus,jdbcType=INTEGER},
        PUSH_REPEAT = #{record.pushRepeat,jdbcType=INTEGER},
        PUSH_INTERFACE_FEEDBACK = #{record.pushInterfaceFeedback,jdbcType=VARCHAR},
        PUSH_TIME = #{record.pushTime,jdbcType=TIMESTAMP},
        PUSH_COMPLETE_TIME = #{record.pushCompleteTime,jdbcType=TIMESTAMP},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        INTERFACE_CALL_ID = #{record.interfaceCallId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ai.ge.platform.model.log.LogDataBatchFeedbackDetail">
        update log_data_batch_feedback_detail
        <set>
            <if test="logFeedbackId != null">
                LOG_FEEDBACK_ID = #{logFeedbackId,jdbcType=INTEGER},
            </if>
            <if test="splitBlock != null">
                SPLIT_BLOCK = #{splitBlock,jdbcType=INTEGER},
            </if>
            <if test="dataNum != null">
                DATA_NUM = #{dataNum,jdbcType=INTEGER},
            </if>
            <if test="splitFilePath != null">
                SPLIT_FILE_PATH = #{splitFilePath,jdbcType=VARCHAR},
            </if>
            <if test="splitStatus != null">
                SPLIT_STATUS = #{splitStatus,jdbcType=INTEGER},
            </if>
            <if test="pushStatus != null">
                PUSH_STATUS = #{pushStatus,jdbcType=INTEGER},
            </if>
            <if test="pushRepeat != null">
                PUSH_REPEAT = #{pushRepeat,jdbcType=INTEGER},
            </if>
            <if test="pushInterfaceFeedback != null">
                PUSH_INTERFACE_FEEDBACK = #{pushInterfaceFeedback,jdbcType=VARCHAR},
            </if>
            <if test="pushTime != null">
                PUSH_TIME = #{pushTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pushCompleteTime != null">
                PUSH_COMPLETE_TIME = #{pushCompleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="interfaceCallId != null">
                INTERFACE_CALL_ID = #{interfaceCallId,jdbcType=INTEGER},
            </if>
        </set>
        where LOG_FEEDBACK_DETAIL_ID = #{logFeedbackDetailId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ai.ge.platform.model.log.LogDataBatchFeedbackDetail">
        update log_data_batch_feedback_detail
        set LOG_FEEDBACK_ID = #{logFeedbackId,jdbcType=INTEGER},
        SPLIT_BLOCK = #{splitBlock,jdbcType=INTEGER},
        DATA_NUM = #{dataNum,jdbcType=INTEGER},
        SPLIT_FILE_PATH = #{splitFilePath,jdbcType=VARCHAR},
        SPLIT_STATUS = #{splitStatus,jdbcType=INTEGER},
        PUSH_STATUS = #{pushStatus,jdbcType=INTEGER},
        PUSH_REPEAT = #{pushRepeat,jdbcType=INTEGER},
        PUSH_INTERFACE_FEEDBACK = #{pushInterfaceFeedback,jdbcType=VARCHAR},
        PUSH_TIME = #{pushTime,jdbcType=TIMESTAMP},
        PUSH_COMPLETE_TIME = #{pushCompleteTime,jdbcType=TIMESTAMP},
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
        INTERFACE_CALL_ID = #{interfaceCallId,jdbcType=INTEGER}
        where LOG_FEEDBACK_DETAIL_ID = #{logFeedbackDetailId,jdbcType=INTEGER}
    </update>
</mapper>