<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.ge.platform.mapper.product.ProdSaleAttrConfigMapper" >
  <resultMap id="BaseResultMap" type="com.ai.ge.platform.model.product.ProdSaleAttrConfig" >
    <id column="CONFIG_ID" property="configId" jdbcType="BIGINT" />
    <result column="PROD_ID" property="prodId" jdbcType="BIGINT" />
    <result column="SALE_ATTR_NAME" property="saleAttrName" jdbcType="VARCHAR" />
    <result column="SALE_ATTR_VALUE" property="saleAttrValue" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="SMALLINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>


  <resultMap id="AliasBaseResultMap" type="com.ai.ge.platform.model.product.ProdSaleAttrConfig" extends="BaseResultMap" >
    <id column="psac_CONFIG_ID" property="configId" jdbcType="BIGINT" />
    <result column="psac_PROD_ID" property="prodId" jdbcType="BIGINT" />
    <result column="psac_STATUS" property="status" jdbcType="SMALLINT" />
    <result column="psac_CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="psac_UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CONFIG_ID, PROD_ID, SALE_ATTR_NAME, SALE_ATTR_VALUE, STATUS, CREATE_TIME, UPDATE_TIME
  </sql>

    <sql id="Alias_Base_Column_List" >
    CONFIG_ID psac_CONFIG_ID, PROD_ID psac_PROD_ID, SALE_ATTR_NAME, SALE_ATTR_VALUE, STATUS psac_STATUS, CREATE_TIME psac_CREATE_TIME, UPDATE_TIME psac_UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.ge.platform.model.product.ProdSaleAttrConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prod_sale_attr_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from prod_sale_attr_config
    where CONFIG_ID = #{configId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from prod_sale_attr_config
    where CONFIG_ID = #{configId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.ge.platform.model.product.ProdSaleAttrConfigExample" >
    delete from prod_sale_attr_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.ge.platform.model.product.ProdSaleAttrConfig" >
    insert into prod_sale_attr_config (CONFIG_ID, PROD_ID, SALE_ATTR_NAME, 
      SALE_ATTR_VALUE, STATUS, CREATE_TIME, 
      UPDATE_TIME)
    values (#{configId,jdbcType=BIGINT}, #{prodId,jdbcType=BIGINT}, #{saleAttrName,jdbcType=VARCHAR}, 
      #{saleAttrValue,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.ge.platform.model.product.ProdSaleAttrConfig" >
    insert into prod_sale_attr_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="configId != null" >
        CONFIG_ID,
      </if>
      <if test="prodId != null" >
        PROD_ID,
      </if>
      <if test="saleAttrName != null" >
        SALE_ATTR_NAME,
      </if>
      <if test="saleAttrValue != null" >
        SALE_ATTR_VALUE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="configId != null" >
        #{configId,jdbcType=BIGINT},
      </if>
      <if test="prodId != null" >
        #{prodId,jdbcType=BIGINT},
      </if>
      <if test="saleAttrName != null" >
        #{saleAttrName,jdbcType=VARCHAR},
      </if>
      <if test="saleAttrValue != null" >
        #{saleAttrValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.ge.platform.model.product.ProdSaleAttrConfigExample" resultType="java.lang.Integer" >
    select count(*) from prod_sale_attr_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map" >
    update prod_sale_attr_config
    <set >
      <if test="record.configId != null" >
        CONFIG_ID = #{record.configId,jdbcType=BIGINT},
      </if>
      <if test="record.prodId != null" >
        PROD_ID = #{record.prodId,jdbcType=BIGINT},
      </if>
      <if test="record.saleAttrName != null" >
        SALE_ATTR_NAME = #{record.saleAttrName,jdbcType=VARCHAR},
      </if>
      <if test="record.saleAttrValue != null" >
        SALE_ATTR_VALUE = #{record.saleAttrValue,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update prod_sale_attr_config
    set CONFIG_ID = #{record.configId,jdbcType=BIGINT},
      PROD_ID = #{record.prodId,jdbcType=BIGINT},
      SALE_ATTR_NAME = #{record.saleAttrName,jdbcType=VARCHAR},
      SALE_ATTR_VALUE = #{record.saleAttrValue,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=SMALLINT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.ge.platform.model.product.ProdSaleAttrConfig" >
    update prod_sale_attr_config
    <set >
      <if test="prodId != null" >
        PROD_ID = #{prodId,jdbcType=BIGINT},
      </if>
      <if test="saleAttrName != null" >
        SALE_ATTR_NAME = #{saleAttrName,jdbcType=VARCHAR},
      </if>
      <if test="saleAttrValue != null" >
        SALE_ATTR_VALUE = #{saleAttrValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where CONFIG_ID = #{configId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.ge.platform.model.product.ProdSaleAttrConfig" >
    update prod_sale_attr_config
    set PROD_ID = #{prodId,jdbcType=BIGINT},
      SALE_ATTR_NAME = #{saleAttrName,jdbcType=VARCHAR},
      SALE_ATTR_VALUE = #{saleAttrValue,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=SMALLINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where CONFIG_ID = #{configId,jdbcType=BIGINT}
  </update>

  <select id="selectByProdId" resultMap="AliasBaseResultMap" parameterType="long">
    SELECT <include refid="Alias_Base_Column_List"/> from prod_sale_attr_config
    where PROD_ID = #{prodId,jdbcType=BIGINT}
  </select>
</mapper>