<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.ge.platform.mapper.product.NumberInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ai.ge.platform.model.product.NumberInfo" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="NUMBER" property="number" jdbcType="VARCHAR" />
    <result column="LEVEL" property="level" jdbcType="SMALLINT" />
    <result column="PRO_TYPE_ID" property="proTypeId" jdbcType="BIGINT" />
    <result column="STATUS" property="status" jdbcType="SMALLINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="PROVINCE_AEAR_ID" property="provinceAearId" jdbcType="BIGINT" />
    <result column="CITY_AEAR_ID" property="cityAearId" jdbcType="BIGINT" />
  </resultMap>

  <resultMap id="NumberInfoDtoMap" type="com.ai.ge.platform.dto.number.NumberInfoDto" extends="BaseResultMap" >
    <result column="AREA_ID" property="areaId" jdbcType="BIGINT" />
    <result column="AREA_NAME" property="areaName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, NUMBER, LEVEL, PRO_TYPE_ID, STATUS, CREATE_TIME, UPDATE_TIME, PROVINCE_AEAR_ID, 
    CITY_AEAR_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.ge.platform.model.product.NumberInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from number_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from number_info
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from number_info
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.ge.platform.model.product.NumberInfoExample" >
    delete from number_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.ge.platform.model.product.NumberInfo" >
    insert into number_info (ID, NUMBER, LEVEL, 
      PRO_TYPE_ID, STATUS, CREATE_TIME, 
      UPDATE_TIME, PROVINCE_AEAR_ID, CITY_AEAR_ID
      )
    values (#{id,jdbcType=BIGINT}, #{number,jdbcType=VARCHAR}, #{level,jdbcType=SMALLINT}, 
      #{proTypeId,jdbcType=BIGINT}, #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{provinceAearId,jdbcType=BIGINT}, #{cityAearId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.ge.platform.model.product.NumberInfo" >
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
          SELECT last_insert_id() as id
      </selectKey>

    insert into number_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        NUMBER,
      </if>
      <if test="level != null" >
        LEVEL,
      </if>
      <if test="proTypeId != null" >
        PRO_TYPE_ID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="provinceAearId != null" >
        PROVINCE_AEAR_ID,
      </if>
      <if test="cityAearId != null" >
        CITY_AEAR_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=SMALLINT},
      </if>
      <if test="proTypeId != null" >
        #{proTypeId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="provinceAearId != null" >
        #{provinceAearId,jdbcType=BIGINT},
      </if>
      <if test="cityAearId != null" >
        #{cityAearId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.ge.platform.model.product.NumberInfoExample" resultType="java.lang.Integer" >
    select count(*) from number_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update number_info
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.number != null" >
        NUMBER = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        LEVEL = #{record.level,jdbcType=SMALLINT},
      </if>
      <if test="record.proTypeId != null" >
        PRO_TYPE_ID = #{record.proTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.provinceAearId != null" >
        PROVINCE_AEAR_ID = #{record.provinceAearId,jdbcType=BIGINT},
      </if>
      <if test="record.cityAearId != null" >
        CITY_AEAR_ID = #{record.cityAearId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update number_info
    set ID = #{record.id,jdbcType=BIGINT},
      NUMBER = #{record.number,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=SMALLINT},
      PRO_TYPE_ID = #{record.proTypeId,jdbcType=BIGINT},
      STATUS = #{record.status,jdbcType=SMALLINT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      PROVINCE_AEAR_ID = #{record.provinceAearId,jdbcType=BIGINT},
      CITY_AEAR_ID = #{record.cityAearId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.ge.platform.model.product.NumberInfo" >
    update number_info
    <set >
      <if test="number != null" >
        NUMBER = #{number,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        LEVEL = #{level,jdbcType=SMALLINT},
      </if>
      <if test="proTypeId != null" >
        PRO_TYPE_ID = #{proTypeId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="provinceAearId != null" >
        PROVINCE_AEAR_ID = #{provinceAearId,jdbcType=BIGINT},
      </if>
      <if test="cityAearId != null" >
        CITY_AEAR_ID = #{cityAearId,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.ge.platform.model.product.NumberInfo" >
    update number_info
    set NUMBER = #{number,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=SMALLINT},
      PRO_TYPE_ID = #{proTypeId,jdbcType=BIGINT},
      STATUS = #{status,jdbcType=SMALLINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      PROVINCE_AEAR_ID = #{provinceAearId,jdbcType=BIGINT},
      CITY_AEAR_ID = #{cityAearId,jdbcType=BIGINT}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <select id="findListBycount" resultMap="BaseResultMap">
    select * from number_info where STATUS = 0
    <if test="provinceAreaId != null" >
      and PROVINCE_AEAR_ID = #{provinceAreaId,jdbcType=BIGINT}
    </if>
    <if test="cityareaId != null" >
      and CITY_AEAR_ID = #{cityareaId,jdbcType=BIGINT}
    </if>
    limit #{count,jdbcType=SMALLINT}
  </select>
    <select id="listNumberInfo" resultMap="NumberInfoDtoMap" resultType="com.ai.ge.platform.dto.number.NumberInfoDto">
    
        SELECT t1.*, sa.area_id, sa.area_name FROM
        (
          SELECT <include refid="Base_Column_List"/> from number_info ni where 1=1
            <if test="number != null and '' != number" >
                and NUMBER like concat('%', #{number,jdbcType=VARCHAR}, '%')
            </if>
            <if test="level != null and '' != level" >
                and LEVEL = #{level,jdbcType=SMALLINT}
            </if>
            <if test="proTypeId != null and '' != proTypeId" >
                and PRO_TYPE_ID = #{proTypeId,jdbcType=BIGINT}
            </if>
            <if test="status != null and -2 != status" >
                and STATUS = #{status,jdbcType=SMALLINT}
            </if>
            <if test="id != null and '' != id" >
                and ID = #{id,jdbcType=BIGINT}
            </if>
            <choose>
                <when test="userType == 1">
                    AND ni.CITY_AEAR_ID in (
                    SELECT sa.AREA_ID from system_area sa WHERE sa.PAR_AREA_ID = #{provinceAearId,jdbcType=BIGINT}
                    )
                </when>
                <when test="userType == 2">
                    and CITY_AEAR_ID = #{cityAearId,jdbcType=BIGINT}
                </when>
            </choose>
        )t1
        left join system_area sa on t1.CITY_AEAR_ID = sa.area_id
        ORDER BY t1.CREATE_TIME desc
    </select>

    <!--
    <select id="findListRand" resultMap="BaseResultMap">
      select * from number_info where STATUS = 0
      <if test="provinceAreaId != null" >
        and PROVINCE_AEAR_ID = #{provinceAreaId,jdbcType=BIGINT}
      </if>
      <if test="cityareaId != null" >
        and CITY_AEAR_ID = #{cityareaId,jdbcType=BIGINT}
      </if>
      AND ID >= ((SELECT MAX(ID) FROM number_info)-(SELECT MIN(ID) FROM number_info)) * RAND() +
      (SELECT MIN(ID) FROM number_info)  LIMIT #{numberCount,jdbcType=SMALLINT}

    </select>
    -->
    <select id="findListRand" resultMap="BaseResultMap">
      select * from number_info where STATUS = 0
      <if test="provinceAreaId != null" >
        and PROVINCE_AEAR_ID = #{provinceAreaId,jdbcType=BIGINT}
      </if>
      <if test="cityareaId != null" >
        and CITY_AEAR_ID = #{cityareaId,jdbcType=BIGINT}
      </if>
      ORDER BY rand() LIMIT #{numberCount,jdbcType=SMALLINT}

    </select>

    <select id="isExistsNumber" resultType="map">
      SELECT c.NUMBER FROM number_info c WHERE
      <foreach item="nums" index="index" collection="numbers" open="(" close=")" separator="or">
        c.NUMBER IN
        <foreach item="num" index="index" collection="nums" open="(" close=")" separator=",">
          #{num}
        </foreach>
      </foreach>
    </select>


    <insert id="insertBatch">
        insert into NUMBER_INFO (NUMBER, LEVEL, PRO_TYPE_ID, STATUS, PROVINCE_AEAR_ID, CITY_AEAR_ID)

        SELECT a.* from
        (
            <foreach collection="objects" item="object" index="index" separator="union">
              select
                #{object.number} as NUMBER,
                #{object.level} as level,
                #{object.proTypeId} as pro_type_id,
                #{object.status} as status,
                #{object.provinceAearId} as PROVINCE_AEAR_ID,
                #{object.cityAearId} as CITY_AEAR_ID
              from dual
            </foreach>
        ) a

    </insert>
</mapper>